//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WriteEverywhere.Localization {
    using System;
    
    
    /// <summary>
    ///   Uma classe de recurso de tipo de alta segurança, para pesquisar cadeias de caracteres localizadas etc.
    /// </summary>
    // Essa classe foi gerada automaticamente pela classe StronglyTypedResourceBuilder
    // através de uma ferramenta como ResGen ou Visual Studio.
    // Para adicionar ou remover um associado, edite o arquivo .ResX e execute ResGen novamente
    // com a opção /str, ou recrie o projeto do VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Str {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Str() {
        }
        
        /// <summary>
        ///   Retorna a instância de ResourceManager armazenada em cache usada por essa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WriteEverywhere.Localization.Str", typeof(Str).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Substitui a propriedade CurrentUICulture do thread atual para todas as
        ///   pesquisas de recursos que usam essa classe de recurso de tipo de alta segurança.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Workshop.
        /// </summary>
        internal static string comm_Enum__ConfigurationSource_ASSET {
            get {
                return ResourceManager.GetString("comm_Enum__ConfigurationSource_ASSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Savegame (City).
        /// </summary>
        internal static string comm_Enum__ConfigurationSource_CITY {
            get {
                return ResourceManager.GetString("comm_Enum__ConfigurationSource_CITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Local folder (Appdata).
        /// </summary>
        internal static string comm_Enum__ConfigurationSource_GLOBAL {
            get {
                return ResourceManager.GetString("comm_Enum__ConfigurationSource_GLOBAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a None (Disabled).
        /// </summary>
        internal static string comm_Enum__ConfigurationSource_NONE {
            get {
                return ResourceManager.GetString("comm_Enum__ConfigurationSource_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Skin (From Vehicle Skins).
        /// </summary>
        internal static string comm_Enum__ConfigurationSource_SKIN {
            get {
                return ResourceManager.GetString("comm_Enum__ConfigurationSource_SKIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a No cloning.
        /// </summary>
        internal static string comm_Enum__YCloneType_None {
            get {
                return ResourceManager.GetString("comm_Enum__YCloneType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Mirrored on X Axis.
        /// </summary>
        internal static string comm_Enum__YCloneType_OnX {
            get {
                return ResourceManager.GetString("comm_Enum__YCloneType_OnX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Mirrored on Z Axis.
        /// </summary>
        internal static string comm_Enum__YCloneType_OnZ {
            get {
                return ResourceManager.GetString("comm_Enum__YCloneType_OnZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Allow to write text in-game to simulate stuff like boards or signs..
        /// </summary>
        internal static string root_modDescription {
            get {
                return ResourceManager.GetString("root_modDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Blink 250ms.
        /// </summary>
        internal static string we_Enum__BlinkType_Blink_025_025 {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_Blink_025_025", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Blink 500ms.
        /// </summary>
        internal static string we_Enum__BlinkType_Blink_050_050 {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_Blink_050_050", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Custom.
        /// </summary>
        internal static string we_Enum__BlinkType_Custom {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Medium fade.
        /// </summary>
        internal static string we_Enum__BlinkType_MediumFade_500_500 {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_MediumFade_500_500", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Mild fade.
        /// </summary>
        internal static string we_Enum__BlinkType_MildFade_0125_0125 {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_MildFade_0125_0125", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a None.
        /// </summary>
        internal static string we_Enum__BlinkType_None {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Strong blaze (neon).
        /// </summary>
        internal static string we_Enum__BlinkType_StrongBlaze_0125_0125 {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_StrongBlaze_0125_0125", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Strong fade.
        /// </summary>
        internal static string we_Enum__BlinkType_StrongFade_250_250 {
            get {
                return ResourceManager.GetString("we_Enum__BlinkType_StrongFade_250_250", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Electronic Boards.
        /// </summary>
        internal static string we_Enum__FontClass_ElectronicBoards {
            get {
                return ResourceManager.GetString("we_Enum__FontClass_ElectronicBoards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Highway Shields.
        /// </summary>
        internal static string we_Enum__FontClass_HighwayShields {
            get {
                return ResourceManager.GetString("we_Enum__FontClass_HighwayShields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Public Transport.
        /// </summary>
        internal static string we_Enum__FontClass_PublicTransport {
            get {
                return ResourceManager.GetString("we_Enum__FontClass_PublicTransport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Regular.
        /// </summary>
        internal static string we_Enum__FontClass_Regular {
            get {
                return ResourceManager.GetString("we_Enum__FontClass_Regular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Stencil.
        /// </summary>
        internal static string we_Enum__FontClass_Stencil {
            get {
                return ResourceManager.GetString("we_Enum__FontClass_Stencil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Always bright.
        /// </summary>
        internal static string we_Enum__MaterialType_BRIGHT {
            get {
                return ResourceManager.GetString("we_Enum__MaterialType_BRIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Day/Night illumination.
        /// </summary>
        internal static string we_Enum__MaterialType_DAYNIGHT {
            get {
                return ResourceManager.GetString("we_Enum__MaterialType_DAYNIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a By flags.
        /// </summary>
        internal static string we_Enum__MaterialType_FLAGS {
            get {
                return ResourceManager.GetString("we_Enum__MaterialType_FLAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Opaque.
        /// </summary>
        internal static string we_Enum__MaterialType_OPAQUE {
            get {
                return ResourceManager.GetString("we_Enum__MaterialType_OPAQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Center.
        /// </summary>
        internal static string we_Enum__UIHorizontalAlignment_Center {
            get {
                return ResourceManager.GetString("we_Enum__UIHorizontalAlignment_Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Left.
        /// </summary>
        internal static string we_Enum__UIHorizontalAlignment_Left {
            get {
                return ResourceManager.GetString("we_Enum__UIHorizontalAlignment_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Right.
        /// </summary>
        internal static string we_Enum__UIHorizontalAlignment_Right {
            get {
                return ResourceManager.GetString("we_Enum__UIHorizontalAlignment_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Error loading the item {1}/{2} for a vehicle in the following scope: {2}
        ///Check the data shown below to get information..
        /// </summary>
        internal static string we_errorLoadingVehicleLayout_msg {
            get {
                return ResourceManager.GetString("we_errorLoadingVehicleLayout_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Export whole list to library.
        /// </summary>
        internal static string we_generalLib_exportFullList {
            get {
                return ResourceManager.GetString("we_generalLib_exportFullList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Import adding all items into current list.
        /// </summary>
        internal static string we_generalLib_importAdditive {
            get {
                return ResourceManager.GetString("we_generalLib_importAdditive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Import whole list from library.
        /// </summary>
        internal static string we_generalLib_importFullList {
            get {
                return ResourceManager.GetString("we_generalLib_importFullList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use front face color in the back face.
        /// </summary>
        internal static string we_generalTextEditor_backfaceFontColorIsSameAsFrontFace {
            get {
                return ResourceManager.GetString("we_generalTextEditor_backfaceFontColorIsSameAsFrontFace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a BG backface color.
        /// </summary>
        internal static string we_generalTextEditor_backgroundBackfaceColor {
            get {
                return ResourceManager.GetString("we_generalTextEditor_backgroundBackfaceColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Background Image.
        /// </summary>
        internal static string we_generalTextEditor_backgroundImage {
            get {
                return ResourceManager.GetString("we_generalTextEditor_backgroundImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Box inner color.
        /// </summary>
        internal static string we_generalTextEditor_boxInnerColor {
            get {
                return ResourceManager.GetString("we_generalTextEditor_boxInnerColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Clone at 180º Y type.
        /// </summary>
        internal static string we_generalTextEditor_cloneType180 {
            get {
                return ResourceManager.GetString("we_generalTextEditor_cloneType180", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text backface color.
        /// </summary>
        internal static string we_generalTextEditor_fontBackfaceColor {
            get {
                return ResourceManager.GetString("we_generalTextEditor_fontBackfaceColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Image relative borders
        ///(Left, Bottom, Right, Top - 0 to 1).
        /// </summary>
        internal static string we_generalTextEditor_imageBordersLBRTlabel {
            get {
                return ResourceManager.GetString("we_generalTextEditor_imageBordersLBRTlabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Pixel density per square meter.
        /// </summary>
        internal static string we_generalTextEditor_imageDensityPixelsPerMeters {
            get {
                return ResourceManager.GetString("we_generalTextEditor_imageDensityPixelsPerMeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Save image info into file.
        /// </summary>
        internal static string we_generalTextEditor_imageSaveImageInfoBtn {
            get {
                return ResourceManager.GetString("we_generalTextEditor_imageSaveImageInfoBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Show borders.
        /// </summary>
        internal static string we_generalTextEditor_imageShowBorders {
            get {
                return ResourceManager.GetString("we_generalTextEditor_imageShowBorders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Create background.
        /// </summary>
        internal static string we_generalTextEditor_useBackground {
            get {
                return ResourceManager.GetString("we_generalTextEditor_useBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use prefab color.
        /// </summary>
        internal static string we_generalTextEditor_usePrefabColor {
            get {
                return ResourceManager.GetString("we_generalTextEditor_usePrefabColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Center (looking front).
        /// </summary>
        internal static string we_PivotPosition__Center {
            get {
                return ResourceManager.GetString("we_PivotPosition__Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Center (looking behind).
        /// </summary>
        internal static string we_PivotPosition__CenterInvert {
            get {
                return ResourceManager.GetString("we_PivotPosition__CenterInvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Center (looking left).
        /// </summary>
        internal static string we_PivotPosition__CenterLookingLeft {
            get {
                return ResourceManager.GetString("we_PivotPosition__CenterLookingLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Center (looking right).
        /// </summary>
        internal static string we_PivotPosition__CenterLookingRight {
            get {
                return ResourceManager.GetString("we_PivotPosition__CenterLookingRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Left side.
        /// </summary>
        internal static string we_PivotPosition__Left {
            get {
                return ResourceManager.GetString("we_PivotPosition__Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Left side (inverse traffic).
        /// </summary>
        internal static string we_PivotPosition__LeftInvert {
            get {
                return ResourceManager.GetString("we_PivotPosition__LeftInvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Right side.
        /// </summary>
        internal static string we_PivotPosition__Right {
            get {
                return ResourceManager.GetString("we_PivotPosition__Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Right side (inverse traffic).
        /// </summary>
        internal static string we_PivotPosition__RightInvert {
            get {
                return ResourceManager.GetString("we_PivotPosition__RightInvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Horizontal alignment relative to line width
        ///(0 = left; 1 = right).
        /// </summary>
        internal static string we_roadEditor_horizontalAlignmentBoxText {
            get {
                return ResourceManager.GetString("we_roadEditor_horizontalAlignmentBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Import items into list.
        /// </summary>
        internal static string we_roadEditor_importAdding {
            get {
                return ResourceManager.GetString("we_roadEditor_importAdding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Replace items from lib.
        /// </summary>
        internal static string we_roadEditor_importReplacing {
            get {
                return ResourceManager.GetString("we_roadEditor_importReplacing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Lock camera at instance # (starting at 0).
        /// </summary>
        internal static string we_roadEditor_lockCameraAtInstance {
            get {
                return ResourceManager.GetString("we_roadEditor_lockCameraAtInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Pivot Position.
        /// </summary>
        internal static string we_roadEditor_pivotPosition {
            get {
                return ResourceManager.GetString("we_roadEditor_pivotPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Vertical alignment relative to base line
        ///(0 = below with baseline; 1 = top with capital line).
        /// </summary>
        internal static string we_roadEditor_verticalAlignmentBoxText {
            get {
                return ResourceManager.GetString("we_roadEditor_verticalAlignmentBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Vertical alignment relative to the line when resizing
        ///(0 = below with baseline; 1 = top with capital line).
        /// </summary>
        internal static string we_roadEditor_verticalAlignmentLineText {
            get {
                return ResourceManager.GetString("we_roadEditor_verticalAlignmentLineText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a On Net Editor.
        /// </summary>
        internal static string we_roadEditor_windowTitle {
            get {
                return ResourceManager.GetString("we_roadEditor_windowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Apply UI Settings.
        /// </summary>
        internal static string we_settings_applyUiSettings {
            get {
                return ResourceManager.GetString("we_settings_applyUiSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Mod settings.
        /// </summary>
        internal static string we_settings_btnLabel {
            get {
                return ResourceManager.GetString("we_settings_btnLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a The default fonts will be used when none is selected in a layout, when relative to Building, Vehicle or Placing on network modes; or can be selected as font class for the other fields below..
        /// </summary>
        internal static string we_settings_defaultFontDescription {
            get {
                return ResourceManager.GetString("we_settings_defaultFontDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default fonts.
        /// </summary>
        internal static string we_settings_defaultFonts {
            get {
                return ResourceManager.GetString("we_settings_defaultFonts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default fonts settings are available only when a city is loaded.
        /// </summary>
        internal static string we_settings_defaultFontsAvailableOnlyWhenCityLoaded {
            get {
                return ResourceManager.GetString("we_settings_defaultFontsAvailableOnlyWhenCityLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Custom file folders.
        /// </summary>
        internal static string we_settings_folders {
            get {
                return ResourceManager.GetString("we_settings_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Go To.
        /// </summary>
        internal static string we_settings_goToFolderShort {
            get {
                return ResourceManager.GetString("we_settings_goToFolderShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Rendering quality.
        /// </summary>
        internal static string we_settings_quality {
            get {
                return ResourceManager.GetString("we_settings_quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Reload fonts.
        /// </summary>
        internal static string we_settings_reloadFonts {
            get {
                return ResourceManager.GetString("we_settings_reloadFonts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a UI.
        /// </summary>
        internal static string we_settings_ui {
            get {
                return ResourceManager.GetString("we_settings_ui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a UI Background Opacity.
        /// </summary>
        internal static string we_settings_uiOpacity {
            get {
                return ResourceManager.GetString("we_settings_uiOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a UI general scale.
        /// </summary>
        internal static string we_settings_uiScale {
            get {
                return ResourceManager.GetString("we_settings_uiScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Settings.
        /// </summary>
        internal static string we_settings_windowTitle {
            get {
                return ResourceManager.GetString("we_settings_windowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a There are no vehicles of this model running around this city.
        ///Try force spawning anywhere, like setting the model to a transport line..
        /// </summary>
        internal static string we_vehicleEditor_failedPickingAVehicle {
            get {
                return ResourceManager.GetString("we_vehicleEditor_failedPickingAVehicle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Head.
        /// </summary>
        internal static string we_vehicleEditor_headVehicleTitle {
            get {
                return ResourceManager.GetString("we_vehicleEditor_headVehicleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Picker.
        /// </summary>
        internal static string we_vehicleEditor_pickerBtn {
            get {
                return ResourceManager.GetString("we_vehicleEditor_pickerBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Grab an unit of this vehicle as viewer, if exists.
        /// </summary>
        internal static string we_vehicleEditor_pickOrSpawnAVehicle {
            get {
                return ResourceManager.GetString("we_vehicleEditor_pickOrSpawnAVehicle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Trailer {0}.
        /// </summary>
        internal static string we_vehicleEditor_trailerNumTitle {
            get {
                return ResourceManager.GetString("we_vehicleEditor_trailerNumTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Waiting seach for the vehicle....
        /// </summary>
        internal static string we_vehicleEditor_waitingGrabVehicle {
            get {
                return ResourceManager.GetString("we_vehicleEditor_waitingGrabVehicle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Filter assets having at least one layout active.
        /// </summary>
        internal static string WTS_ACTIVERULESONLY {
            get {
                return ResourceManager.GetString("WTS_ACTIVERULESONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Background &amp; box .
        /// </summary>
        internal static string WTS_BACKGROUNDANDBOX_SETTINGS {
            get {
                return ResourceManager.GetString("WTS_BACKGROUNDANDBOX_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Background color.
        /// </summary>
        internal static string WTS_BG_COLOR {
            get {
                return ResourceManager.GetString("WTS_BG_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Any kind.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__Any {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__Any", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Highway shield.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__HwShield {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__HwShield", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a List of lines.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__LinesNameList {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__LinesNameList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Lines passing.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__LinesSymbols {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__LinesSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a None.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__None {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sprite slideshow from a folder.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__ParameterizedSpriteFolder {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__ParameterizedSpriteFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Parameterized sprite.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__ParameterizedSpriteSingle {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__ParameterizedSpriteSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Parameterized Text.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__ParameterizedText {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__ParameterizedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text sequence.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__TextParameterSequence {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__TextParameterSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Time &amp; Temperature.
        /// </summary>
        internal static string WTS_BOARD_TEXT_TYPE_DESC__TimeTemperature {
            get {
                return ResourceManager.GetString("WTS_BOARD_TEXT_TYPE_DESC__TimeTemperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Back mesh tilt offset (from Center/Bottom).
        /// </summary>
        internal static string WTS_BOXMESH_BACKOFFSETFROMCENTERBOTTOM {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_BACKOFFSETFROMCENTERBOTTOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Back mesh rectangle size.
        /// </summary>
        internal static string WTS_BOXMESH_BACKSIZE {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_BACKSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Colors.
        /// </summary>
        internal static string WTS_BOXMESH_COLORSGROUP_LABEL {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_COLORSGROUP_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Depth BG-&gt;Back mesh.
        /// </summary>
        internal static string WTS_BOXMESH_DEPTH_BACK {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_DEPTH_BACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Depth BG-&gt;Front mesh.
        /// </summary>
        internal static string WTS_BOXMESH_DEPTH_FRONT {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_DEPTH_FRONT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Effects.
        /// </summary>
        internal static string WTS_BOXMESH_EFFECTSGROUP_LABEL {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_EFFECTSGROUP_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Box outer color.
        /// </summary>
        internal static string WTS_BOXMESH_OUTERCOLOR {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_OUTERCOLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sizes.
        /// </summary>
        internal static string WTS_BOXMESH_SIZESGROUP_LABEL {
            get {
                return ResourceManager.GetString("WTS_BOXMESH_SIZESGROUP_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Clone this layout to be edited in this savegame.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_COPYTOCITY {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_COPYTOCITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Copy to clipboard.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_COPYTOCLIPBOARD {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_COPYTOCLIPBOARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Delete from this savegame
        ///(Note: appdata or asset values will be used if exists).
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_DELETEFROMCITY {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_DELETEFROMCITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Export this layout to local folder (Appdata).
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_EXPORTASGLOBAL {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_EXPORTASGLOBAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Export this layout to be packed
        ///to Steam Workshop.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_EXPORTTOASSETFOLDER {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_EXPORTTOASSETFOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Create new layout for this savegame.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_NEWINCITY {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_NEWINCITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Open appdata layouts folder.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_OPENGLOBALSFOLDER {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_OPENGLOBALSFOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Paste from clipboard.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_PASTEFROMCLIPBOARD {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_PASTEFROMCLIPBOARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Reload descriptors.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_RELOADDESCRIPTORS {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_RELOADDESCRIPTORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Save skin layout to disk.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_BUTTONROWACTION_SAVESKIN {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_BUTTONROWACTION_SAVESKIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Model/Layout selection.
        /// </summary>
        internal static string WTS_BUILDINGEDITOR_MODELLAYOUTSELECT {
            get {
                return ResourceManager.GetString("WTS_BUILDINGEDITOR_MODELLAYOUTSELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Font class.
        /// </summary>
        internal static string WTS_CLASS_FONT {
            get {
                return ResourceManager.GetString("WTS_CLASS_FONT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a 12h clock.
        /// </summary>
        internal static string WTS_CLOCK_12H_CLOCK {
            get {
                return ResourceManager.GetString("WTS_CLOCK_12H_CLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Precision (in minutes)
        ///Note that very low values are recommended only with Real Time mod or alike!.
        /// </summary>
        internal static string WTS_CLOCK_MINUTES_PRECISION {
            get {
                return ResourceManager.GetString("WTS_CLOCK_MINUTES_PRECISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Show leading zero of hours.
        /// </summary>
        internal static string WTS_CLOCK_SHOW_LEADING_ZERO {
            get {
                return ResourceManager.GetString("WTS_CLOCK_SHOW_LEADING_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Invert text horizontal align on clone.
        /// </summary>
        internal static string WTS_CLONE_180DEG_INVERT_TEXT_HOR_ALIGN {
            get {
                return ResourceManager.GetString("WTS_CLONE_180DEG_INVERT_TEXT_HOR_ALIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Parameter value.
        /// </summary>
        internal static string WTS_CONTENT_TEXTVALUE {
            get {
                return ResourceManager.GetString("WTS_CONTENT_TEXTVALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Create cloned text rotated 180° on Y (inverse Z distance - use for simmetric 2 face props).
        /// </summary>
        internal static string WTS_CREATE_CLONE_180DEG {
            get {
                return ResourceManager.GetString("WTS_CREATE_CLONE_180DEG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Currently using.
        /// </summary>
        internal static string WTS_CURRENTLY_USING {
            get {
                return ResourceManager.GetString("WTS_CURRENTLY_USING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current selection.
        /// </summary>
        internal static string WTS_CURRENTSELECTION {
            get {
                return ResourceManager.GetString("WTS_CURRENTSELECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Some erros happened while trying to load custom sprites:.
        /// </summary>
        internal static string WTS_CUSTOMSPRITE_ERRORHEADER {
            get {
                return ResourceManager.GetString("WTS_CUSTOMSPRITE_ERRORHEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a An error has occurred loading image....
        /// </summary>
        internal static string WTS_CUSTOMSPRITE_FAILEDREADIMAGE {
            get {
                return ResourceManager.GetString("WTS_CUSTOMSPRITE_FAILEDREADIMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Image too large!!.
        /// </summary>
        internal static string WTS_CUSTOMSPRITE_IMAGETOOLARGE {
            get {
                return ResourceManager.GetString("WTS_CUSTOMSPRITE_IMAGETOOLARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default configurations for buildings folder.
        /// </summary>
        internal static string WTS_DEFAULT_BUILDINGS_CONFIG_PATH_TITLE {
            get {
                return ResourceManager.GetString("WTS_DEFAULT_BUILDINGS_CONFIG_PATH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default game font.
        /// </summary>
        internal static string WTS_DEFAULT_FONT_LABEL {
            get {
                return ResourceManager.GetString("WTS_DEFAULT_FONT_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Folder with pre-saved highway shields configuration (only active if Addresses mod is active).
        /// </summary>
        internal static string WTS_DEFAULT_HWSHIELDS_CONFIG_PATH_TITLE {
            get {
                return ResourceManager.GetString("WTS_DEFAULT_HWSHIELDS_CONFIG_PATH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Default prop layouts.
        /// </summary>
        internal static string WTS_DEFAULT_PROP_LAYOUTS_PATH_TITLE {
            get {
                return ResourceManager.GetString("WTS_DEFAULT_PROP_LAYOUTS_PATH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Global vehicles text layout files folder.
        /// </summary>
        internal static string WTS_DEFAULT_VEHICLES_CONFIG_PATH_TITLE {
            get {
                return ResourceManager.GetString("WTS_DEFAULT_VEHICLES_CONFIG_PATH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Delete this text item.
        /// </summary>
        internal static string WTS_DELETETEXTITEM {
            get {
                return ResourceManager.GetString("WTS_DELETETEXTITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Name of this rule to be saved:.
        /// </summary>
        internal static string WTS_EXPORTDATA_NAMEASKING {
            get {
                return ResourceManager.GetString("WTS_EXPORTDATA_NAMEASKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a There&apos;s already a rule with this name. Overwrite?.
        /// </summary>
        internal static string WTS_EXPORTDATA_NAMEASKING_OVERWRITE {
            get {
                return ResourceManager.GetString("WTS_EXPORTDATA_NAMEASKING_OVERWRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Export layout to library.
        /// </summary>
        internal static string WTS_EXPORTLAYOUT_LIB {
            get {
                return ResourceManager.GetString("WTS_EXPORTLAYOUT_LIB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Extra sprites folder (max 400x400) to use in layouts.
        /// </summary>
        internal static string WTS_EXTRA_SPRITES_PATH_TITLE {
            get {
                return ResourceManager.GetString("WTS_EXTRA_SPRITES_PATH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Flags required/forbidden.
        /// </summary>
        internal static string WTS_FLAGSREQUREDFORBIDDEN {
            get {
                return ResourceManager.GetString("WTS_FLAGSREQUREDFORBIDDEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Folder from asset.
        /// </summary>
        internal static string WTS_FOLDERSRC_ASSET {
            get {
                return ResourceManager.GetString("WTS_FOLDERSRC_ASSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Global folder.
        /// </summary>
        internal static string WTS_FOLDERSRC_LOCAL {
            get {
                return ResourceManager.GetString("WTS_FOLDERSRC_LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Fonts folder.
        /// </summary>
        internal static string WTS_FONT_FILES_PATH_TITLE {
            get {
                return ResourceManager.GetString("WTS_FONT_FILES_PATH_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Font quality
        ///(high values may cause glitches).
        /// </summary>
        internal static string WTS_FONT_QUALITY {
            get {
                return ResourceManager.GetString("WTS_FONT_QUALITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Font face settings.
        /// </summary>
        internal static string WTS_FONTFACE_SETTINGS {
            get {
                return ResourceManager.GetString("WTS_FONTFACE_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a General settings.
        /// </summary>
        internal static string WTS_GENERAL_SETTINGS {
            get {
                return ResourceManager.GetString("WTS_GENERAL_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Clock meshes options.
        /// </summary>
        internal static string WTS_GENERATED_CLOCK_OPTIONS {
            get {
                return ResourceManager.GetString("WTS_GENERATED_CLOCK_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Image from asset folder.
        /// </summary>
        internal static string WTS_IMAGESRC_ASSET {
            get {
                return ResourceManager.GetString("WTS_IMAGESRC_ASSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Image from appdata folder.
        /// </summary>
        internal static string WTS_IMAGESRC_LOCAL {
            get {
                return ResourceManager.GetString("WTS_IMAGESRC_LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Import layout from library.
        /// </summary>
        internal static string WTS_IMPORTLAYOUT_LIB {
            get {
                return ResourceManager.GetString("WTS_IMPORTLAYOUT_LIB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Initial texture size
        ///(raise it only if you get undesired &quot;black letters&quot; when zooming in).
        /// </summary>
        internal static string WTS_INITIAL_TEXTURE_SIZE_FONT {
            get {
                return ResourceManager.GetString("WTS_INITIAL_TEXTURE_SIZE_FONT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Invert road side.
        /// </summary>
        internal static string WTS_INVERT_SIGN_SIDE {
            get {
                return ResourceManager.GetString("WTS_INVERT_SIGN_SIDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Skin (From Vehicle Skins).
        /// </summary>
        internal static string WTS_LAYOUTSKIN {
            get {
                return ResourceManager.GetString("WTS_LAYOUTSKIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Line dimensions (meters) (width, height).
        /// </summary>
        internal static string WTS_LINEDIMENSIONS {
            get {
                return ResourceManager.GetString("WTS_LINEDIMENSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Max words being draw in background per font.
        /// </summary>
        internal static string WTS_MAX_PARALLEL_WORD_PROCESSES {
            get {
                return ResourceManager.GetString("WTS_MAX_PARALLEL_WORD_PROCESSES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a &lt;color=#FF0000&gt;Wrong settings in this parameter!&lt;/color&gt;
        ///There are more than one text entry of different kind pointing to this parameter. Please check your layout settings..
        /// </summary>
        internal static string WTS_ONNETEDITOR_INVALIDPARAMSETTINGS_DIFFERENTKINDSAMEPARAM {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_INVALIDPARAMSETTINGS_DIFFERENTKINDSAMEPARAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Positioning settings.
        /// </summary>
        internal static string WTS_ONNETEDITOR_LOCATION_SETTINGS {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_LOCATION_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Name.
        /// </summary>
        internal static string WTS_ONNETEDITOR_NAME {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Position offset.
        /// </summary>
        internal static string WTS_ONNETEDITOR_POSITIONOFFSET {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_POSITIONOFFSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Prop layout.
        /// </summary>
        internal static string WTS_ONNETEDITOR_PROPLAYOUT {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_PROPLAYOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Prop model.
        /// </summary>
        internal static string WTS_ONNETEDITOR_PROPMODELSELECT {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_PROPMODELSELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Rotation.
        /// </summary>
        internal static string WTS_ONNETEDITOR_ROTATION {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_ROTATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Scale.
        /// </summary>
        internal static string WTS_ONNETEDITOR_SCALE {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_SCALE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Segment path relative position.
        /// </summary>
        internal static string WTS_ONNETEDITOR_SEGMENTPOSITION {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_SEGMENTPOSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Instances count.
        /// </summary>
        internal static string WTS_ONNETEDITOR_SEGMENTPOSITION_COUNT {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_SEGMENTPOSITION_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Last item segment offset.
        /// </summary>
        internal static string WTS_ONNETEDITOR_SEGMENTPOSITION_END {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_SEGMENTPOSITION_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a First item segment offset.
        /// </summary>
        internal static string WTS_ONNETEDITOR_SEGMENTPOSITION_START {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_SEGMENTPOSITION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Target {0}.
        /// </summary>
        internal static string WTS_ONNETEDITOR_TARGET {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Parameter {0}.
        /// </summary>
        internal static string WTS_ONNETEDITOR_TEXTPARAM {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_TEXTPARAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a &lt;Target is not set&gt;.
        /// </summary>
        internal static string WTS_ONNETEDITOR_UNSETTARGETDESC {
            get {
                return ResourceManager.GetString("WTS_ONNETEDITOR_UNSETTARGETDESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text font for override.
        /// </summary>
        internal static string WTS_OVERRIDE_FONT {
            get {
                return ResourceManager.GetString("WTS_OVERRIDE_FONT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Actions.
        /// </summary>
        internal static string WTS_PARAMSEQ_ACTIONS {
            get {
                return ResourceManager.GetString("WTS_PARAMSEQ_ACTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Duration.
        /// </summary>
        internal static string WTS_PARAMSEQ_STEPLENGTH {
            get {
                return ResourceManager.GetString("WTS_PARAMSEQ_STEPLENGTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Plain text.
        /// </summary>
        internal static string WTS_PARAMTYPE_PLAINTEXT {
            get {
                return ResourceManager.GetString("WTS_PARAMTYPE_PLAINTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Game stats variable.
        /// </summary>
        internal static string WTS_PARAMTYPE_VARIABLE {
            get {
                return ResourceManager.GetString("WTS_PARAMTYPE_VARIABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use the decimal number formatting. Examples for the number &lt;color=#FFFF00&gt;1250.65&lt;/color&gt;:
        ///&lt;color=#FFFF00&gt;0&lt;/color&gt; =&gt; &lt;color=#00FF00&gt;1251&lt;/color&gt;
        ///&lt;color=#FFFF00&gt;0.000&lt;/color&gt; =&gt; &lt;color=#00FF00&gt;1250.650&lt;/color&gt;
        ///&lt;color=#FFFF00&gt;#,##0.0&lt;/color&gt; =&gt; &lt;color=#00FF00&gt;1,250.7&lt;/color&gt;
        ///
        ///Search by the C# number formatting reference for more details..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__COMMON_NUMBERFORMAT_FLOAT {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__COMMON_NUMBERFORMAT_FLOAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use the integer number formatting. Examples for the number &lt;color=#FFFF00&gt;1251&lt;/color&gt;:
        ///&lt;color=#FFFF00&gt;0&lt;/color&gt; =&gt; &lt;color=#00FF00&gt;1251&lt;/color&gt;
        ///&lt;color=#FFFF00&gt;X&lt;/color&gt; =&gt; &lt;color=#00FF00&gt;4E3&lt;/color&gt; (Hexadecimal)
        ///&lt;color=#FFFF00&gt;#,##0&lt;/color&gt; =&gt; &lt;color=#00FF00&gt;1.251&lt;/color&gt;
        ///
        ///Search by the C# number formatting reference for more details..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__COMMON_NUMBERFORMAT_INT {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__COMMON_NUMBERFORMAT_INT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Set up the parameter that will be get the value..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__COMMON_PARAMNUM {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__COMMON_PARAMNUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a (OPTIONAL) Can be left in blank.
        ///A text to precede the variable value. Use the backslash to scape the slashes (&lt;color=#FF00FF&gt;/&lt;/color&gt;)..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__COMMON_PREFIX {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__COMMON_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a (OPTIONAL) Can be left in blank.
        ///&lt;color=#FFFF00&gt;U&lt;/color&gt; Will make the text be transformed to all in uppercase
        ///&lt;color=#FFFF00&gt;L&lt;/color&gt; Will make the text be transformed to all in lowercase
        ///&lt;color=#FFFF00&gt;A&lt;/color&gt; Will apply abbreviations in the text.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__COMMON_STRINGFORMAT {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__COMMON_STRINGFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a (OPTIONAL) Can be left in blank.
        ///A text to succeed the variable value. Use the backslash to scape the slashes (&lt;color=#FF00FF&gt;/&lt;/color&gt;)..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__COMMON_SUFFIX {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__COMMON_SUFFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Type a value between 0 and 4, and select in the list to continue.
        ///
        ///&amp;lt;color=#FFFF00&amp;gt;0 to 4&amp;lt;/color&amp;gt; means that the segments selected at reference tab will be used.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__SegmentTarget__SelectReference {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__SegmentTarget__SelectReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a City name..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableCitySubType_CityName {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableCitySubType_CityName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a  City population.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableCitySubType_CityPopulation {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableCitySubType_CityPopulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a &lt;None?&gt;.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableCitySubType_None {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableCitySubType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Road direction - acronym in current language loaded in the mod. (English will be used as fallback).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_Direction {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_Direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Distance from zero marker of the city (in kilometers)
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistanceFromReferenceKilometers {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistanceFromReferenceKilometers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Distance from zero marker of the city (in meters)
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistanceFromReferenceMeters {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistanceFromReferenceMeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Distance from zero marker of the city (in miles)
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistanceFromReferenceMiles {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistanceFromReferenceMiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a District name, or the outside connection city if at map edge. City name will be used as fallback.
        ///
        ///TIP: Outside connection names may be customized using the &lt;color=#00FF00&gt;Addresses Mod&lt;/color&gt;..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_District {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_District", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current district size in square kilometers. City area size if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictAreaKm2 {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictAreaKm2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current district size in square meters. City area size if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictAreaM2 {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictAreaM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current district size in square miles. City area size if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictAreaMi2 {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictAreaMi2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a District name, or the outside connection city if at map edge. If none available, the Sub-area name will be used if the segment inside one of them. City name will be used as fallback.
        ///
        ///TIP: Outside connection names may be customized using the &lt;color=#00FF00&gt;Addresses Mod&lt;/color&gt;..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictOrPark {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictOrPark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a District population. City population if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictPopulation {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_DistrictPopulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Long highway code (if available).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwCodeLong {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwCodeLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Short highway code (if available).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwCodeShort {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwCodeShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Dettached prefix from highway (if available).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwDettachedPrefix {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwDettachedPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Highway identifier (if available).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwIdentifierSuffix {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_HwIdentifierSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current mileage in kilometers.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_MileageKilometers {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_MileageKilometers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current mileage in meters.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_MileageMeters {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_MileageMeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Current mileage in miles.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_MileageMiles {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_MileageMiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Select the data type to be extracted from the selected segment..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_None {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sub-area name, or empty if not in one.
        ///
        ///Sub-areas are called internally as &quot;Park&quot; because they were introduced at Parklife DLC, then after used by the Industries, Campus and Airport DLC without changing name..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_Park {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_Park", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sub-area size in square kilometers. 0 if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkAreaKm2 {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkAreaKm2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sub-area size in square meters. 0 if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkAreaM2 {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkAreaM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sub-area size in square miles. 0 if not inside one.
        ///
        ///Select for formatting options..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkAreaMi2 {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkAreaMi2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Sub-area name, then District/OutSide Connection/City name if none available.
        ///
        ///Sub-areas are called internally as &quot;Park&quot; because they were introduced at Parklife DLC, then after used by the Industries, Campus and Airport DLC without changing name.
        ///
        ///TIP: Outside connection names may be customized using the &lt;color=#00FF00&gt;Addresses Mod&lt;/color&gt;..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkOrDistrict {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_ParkOrDistrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Postal code.
        ///
        ///TIP: Can be customized by using the &lt;color=#00FF00&gt;Addresses Mod&lt;/color&gt;..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_PostalCode {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_PostalCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Segment full name..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_StreetNameComplete {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_StreetNameComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Segment name qualifier (Avenue, Street, etc)..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_StreetPrefix {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_StreetPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Segment name without qualifier..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_StreetSuffix {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableSegmentTargetSubType_StreetSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Variables about city general data.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_CityData {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_CityData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Variables about current building (building layouts only).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_CurrentBuilding {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_CurrentBuilding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Variables about current segment. (on net and road nodes layouts only).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_CurrentSegment {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_CurrentSegment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use an local variable of the instance at segment to determine its value (on segment only).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_CurrentSegmentParameter {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_CurrentSegmentParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Variables about current vehicle (vehicle layouts only).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_CurrentVehicle {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_CurrentVehicle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a --INVALID--.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_Invalid {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Variables about referenced segments. (on net layouts only).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableType_SegmentTarget {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableType_SegmentTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Last stop of line (destination).
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_LastStopLine {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_LastStopLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Line full name.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_LineFullName {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_LineFullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Line identifier.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_LineIdentifier {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_LineIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Next stop of line.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_NextStopLine {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_NextStopLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a &lt;None?&gt;.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_None {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Own number.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_OwnNumber {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_OwnNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Previous stop of line.
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VariableVehicleSubType_PrevStopLine {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VariableVehicleSubType_PrevStopLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Click once in an item to get information; Click twice to select..
        /// </summary>
        internal static string WTS_PARAMVARS_DESC__VarLevelRoot {
            get {
                return ResourceManager.GetString("WTS_PARAMVARS_DESC__VarLevelRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Pick a segment.
        /// </summary>
        internal static string WTS_PICK_A_SEGMENT {
            get {
                return ResourceManager.GetString("WTS_PICK_A_SEGMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Pick a vehicle.
        /// </summary>
        internal static string WTS_PICK_A_VEHICLE {
            get {
                return ResourceManager.GetString("WTS_PICK_A_VEHICLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Repeat multiple instances along segment.
        /// </summary>
        internal static string WTS_POSITIONINGMODE_ISMULTIPLE {
            get {
                return ResourceManager.GetString("WTS_POSITIONINGMODE_ISMULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Are you sure that you want to delete &quot;{0}&quot;?.
        /// </summary>
        internal static string WTS_PROPEDIT_CONFIGDELETE_MESSAGE {
            get {
                return ResourceManager.GetString("WTS_PROPEDIT_CONFIGDELETE_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Reload images.
        /// </summary>
        internal static string WTS_REFRESH_IMAGES_FOLDER {
            get {
                return ResourceManager.GetString("WTS_REFRESH_IMAGES_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Relative position.
        /// </summary>
        internal static string WTS_RELATIVE_POS {
            get {
                return ResourceManager.GetString("WTS_RELATIVE_POS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Relative rotation.
        /// </summary>
        internal static string WTS_RELATIVE_ROT {
            get {
                return ResourceManager.GetString("WTS_RELATIVE_ROT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Keep aspect ratio of image/font.
        /// </summary>
        internal static string WTS_RESIZE_Y_TEXT_OVERFLOW {
            get {
                return ResourceManager.GetString("WTS_RESIZE_Y_TEXT_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Clear items.
        /// </summary>
        internal static string WTS_SEGMENT_CLEARDATA {
            get {
                return ResourceManager.GetString("WTS_SEGMENT_CLEARDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Are you sure you want to erase all items in the list?.
        /// </summary>
        internal static string WTS_SEGMENT_CLEARDATA_AYS {
            get {
                return ResourceManager.GetString("WTS_SEGMENT_CLEARDATA_AYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Export data to library.
        /// </summary>
        internal static string WTS_SEGMENT_EXPORTDATA {
            get {
                return ResourceManager.GetString("WTS_SEGMENT_EXPORTDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Import rules.
        /// </summary>
        internal static string WTS_SEGMENT_IMPORTDATA {
            get {
                return ResourceManager.GetString("WTS_SEGMENT_IMPORTDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Remove item.
        /// </summary>
        internal static string WTS_SEGMENT_REMOVEITEM {
            get {
                return ResourceManager.GetString("WTS_SEGMENT_REMOVEITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Lock camera in the current selected item.
        /// </summary>
        internal static string WTS_SEGMENTEDITOR_BUTTONROWACTION_LOCKCAMERASELECTION {
            get {
                return ResourceManager.GetString("WTS_SEGMENTEDITOR_BUTTONROWACTION_LOCKCAMERASELECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a On segment placing editor.
        /// </summary>
        internal static string WTS_SEGMENTPLACING_TITLE {
            get {
                return ResourceManager.GetString("WTS_SEGMENTPLACING_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Horizontal align.
        /// </summary>
        internal static string WTS_TEXT_ALIGN_HOR {
            get {
                return ResourceManager.GetString("WTS_TEXT_ALIGN_HOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Blink type.
        /// </summary>
        internal static string WTS_TEXT_BLINKTYPE {
            get {
                return ResourceManager.GetString("WTS_TEXT_BLINKTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text color.
        /// </summary>
        internal static string WTS_TEXT_COLOR {
            get {
                return ResourceManager.GetString("WTS_TEXT_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Front border thickness.
        /// </summary>
        internal static string WTS_TEXT_CONTAINERFRONTBORDERTHICKNESS {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTAINERFRONTBORDERTHICKNESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Glass color.
        /// </summary>
        internal static string WTS_TEXT_CONTAINERGLASSCOLOR {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTAINERGLASSCOLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Glass specularity.
        /// </summary>
        internal static string WTS_TEXT_CONTAINERGLASSSPECULARITY {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTAINERGLASSSPECULARITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Glass transparency.
        /// </summary>
        internal static string WTS_TEXT_CONTAINERGLASSTRANSPARENCY {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTAINERGLASSTRANSPARENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use vehicle color in outer color.
        /// </summary>
        internal static string WTS_TEXT_CONTAINERUSEVEHICLECOLOR {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTAINERUSEVEHICLECOLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text content type.
        /// </summary>
        internal static string WTS_TEXT_CONTENT {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text contents.
        /// </summary>
        internal static string WTS_TEXT_CONTENTVALUE_TAB {
            get {
                return ResourceManager.GetString("WTS_TEXT_CONTENTVALUE_TAB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Custom blink parameters.
        /// </summary>
        internal static string WTS_TEXT_CUSTOMBLINKPARAMS {
            get {
                return ResourceManager.GetString("WTS_TEXT_CUSTOMBLINKPARAMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Depth.
        /// </summary>
        internal static string WTS_TEXT_DEPTH {
            get {
                return ResourceManager.GetString("WTS_TEXT_DEPTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Illumination attributes.
        /// </summary>
        internal static string WTS_TEXT_ILLUMINATION_ATTRIBUTES {
            get {
                return ResourceManager.GetString("WTS_TEXT_ILLUMINATION_ATTRIBUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Illumination Strength.
        /// </summary>
        internal static string WTS_TEXT_ILLUMINATIONSTRENGTH {
            get {
                return ResourceManager.GetString("WTS_TEXT_ILLUMINATIONSTRENGTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Material brightness.
        /// </summary>
        internal static string WTS_TEXT_MATERIALTYPE {
            get {
                return ResourceManager.GetString("WTS_TEXT_MATERIALTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text size attributes.
        /// </summary>
        internal static string WTS_TEXT_SIZE_ATTRIBUTES {
            get {
                return ResourceManager.GetString("WTS_TEXT_SIZE_ATTRIBUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Text mesh title.
        /// </summary>
        internal static string WTS_TEXT_TAB_TITLE {
            get {
                return ResourceManager.GetString("WTS_TEXT_TAB_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Create box around background.
        /// </summary>
        internal static string WTS_TEXT_USEFRAME {
            get {
                return ResourceManager.GetString("WTS_TEXT_USEFRAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Background size.
        /// </summary>
        internal static string WTS_TEXTBACKGROUNDSIZEGENERATED {
            get {
                return ResourceManager.GetString("WTS_TEXTBACKGROUNDSIZEGENERATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Use contrast color (refers to prop color).
        /// </summary>
        internal static string WTS_USE_CONTRAST_COLOR {
            get {
                return ResourceManager.GetString("WTS_USE_CONTRAST_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a &lt;Use parent font setting&gt;.
        /// </summary>
        internal static string WTS_USE_GROUP_SETTING_FONT {
            get {
                return ResourceManager.GetString("WTS_USE_GROUP_SETTING_FONT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Export vehicle layout.
        /// </summary>
        internal static string WTS_VEHICLE_EXPORTLAYOUT {
            get {
                return ResourceManager.GetString("WTS_VEHICLE_EXPORTLAYOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Vehicle layout successfully exported to:.
        /// </summary>
        internal static string WTS_VEHICLE_EXPORTLAYOUT_SUCCESSSAVEDATA {
            get {
                return ResourceManager.GetString("WTS_VEHICLE_EXPORTLAYOUT_SUCCESSSAVEDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Select vehicle model.
        /// </summary>
        internal static string WTS_VEHICLEEDITOR_SELECTMODEL {
            get {
                return ResourceManager.GetString("WTS_VEHICLEEDITOR_SELECTMODEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Consulta uma cadeia de caracteres localizada semelhante a Vehicle editor.
        /// </summary>
        internal static string WTS_VEHICLEEDITOR_WINDOWTITLE {
            get {
                return ResourceManager.GetString("WTS_VEHICLEEDITOR_WINDOWTITLE", resourceCulture);
            }
        }
    }
}
